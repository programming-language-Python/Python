# Основные виджеты
# Toplevel
# Toplevel - окно верхнего уровня. Обычно используется для создания многооконных программ, а также для диалоговых окон.

# Методы виджета
# title - заголовок окна
# overrideredirect - указание оконному менеджеру игнорировать это окно. Аргументом является True или False.
# В случае, если аргумент не указан - получаем текущее значение. Если аргумент равен True,
# то такое окно будет показано оконным менеджером без обрамления (без заголовка и бордюра).
# Может быть использовано, например, для создания splashscreen при старте программы.
# iconify / deiconify - свернуть / развернуть окно
# withdraw - "спрятать" (сделать невидимым) окно. Для того, чтобы снова показать его, надо использовать метод deiconify.
# minsize и maxsize - минимальный / максимальный размер окна. Методы принимают два аргумента - ширина и высота окна.
# Если аргументы не указаны - возвращают текущее значение.
# state - получить текущее значение состояния окна. Может возвращать следующие значения: normal (нормальное состояние),
# icon (показано в виде иконки), iconic (свёрнуто), withdrawn (не показано), zoomed (развёрнуто на полный экран, только для Windows и Mac OS X)
# resizable - может ли пользователь изменять размер окна. Принимает два аргумента - возможность изменения размера по горизонтали и по вертикали.
# Без аргументов возвращает текущее значение.
# geometry - устанавливает геометрию окна в формате ширинаxвысота+x+y (пример: geometry("600x400+40+80") -
# поместить окно в точку с координатам 40,80 и установить размер в 600x400). Размер или координаты могут быть опущены (geometry("600x400") -
# только изменить размер, geometry("+40+80") - только переместить окно).
# transient - сделать окно зависимым от другого окна, указанного в аргументе. Будет сворачиваться вместе с указанным окном.
# Без аргументов возвращает текущее значение.
# protocol - получает два аргумента: название события и функцию, которая будет вызываться при наступлении указанного события.
# События могут называться WM_TAKE_FOCUS (получение фокуса), WM_SAVE_YOURSELF (необходимо сохраниться, в настоящий момент является устаревшим),
# WM_DELETE_WINDOW (удаление окна).
# tkraise (синоним lift) и lower - поднимает (размещает поверх всех других окон) или опускает окно.
# Методы могут принимать один необязательный аргумент: над/под каким окном разместить текущее.
# grab_set - устанавливает фокус на окно, даже при наличии открытых других окон
# grab_release - снимает монопольное владение фокусом ввода с окна
# Эти же методы могут быть использованы для корневого (root) окна.

# Пример:
from tkinter import *
def window_deleted():
    print ('Окно закрыто')
    root.quit() # явное указание на выход из программы
root=Tk()
root.title('Пример приложения')
root.geometry('500x400+300+200') # ширина=500, высота=400, x=300, y=200
root.protocol('WM_DELETE_WINDOW', window_deleted) # обработчик закрытия окна
root.resizable(True, False) # размер окна может быть изменён только по горизонтали
root.mainloop()
# Таким способом можно предотвратить закрытие окна (например, если закрытие окна приведёт к потере введённых пользователем данных).