# Методы семейства grab_ предназначены для управления потоком события.
# Виджет, захвативший поток, будет получать все события окна или приложения.

# grab_set - передать поток данному виджету
# grab_set_global - передать глобальный поток данному виджету.
# В этом случае все события на дисплее будут передаваться этому виджету. 
# Следует пользоваться очень осторожно, т.к. остальные виджеты всех приложений не будут получать события.
# grab_release - освободить поток
# grab_status - узнать текущий статус потока событий для виджета. Возможные значения: None, "local" или "global".
# grab_current - получить виджет, который получает поток
# Пример, приложение захватывает глобальный поток и освобождает его через 10 секунд:

from tkinter import *
root=Tk()
root.after(200, root.grab_set_global)
root.after(10000, root.grab_release)
root.mainloop()

# focus
# Методы семейства focus_ используются для управления фокусом ввода с клавиатуры. Виджет, имеющий фокус, получает все события с клавиатуры.

# focus (синоним focus_set) - передать фокус виджету.
# focus_force - передать фокус, даже если приложение не имеет фокуса. Используйте осторожно, поскольку это может раздражать пользователей.
# focus_get - возвращает виджет, на который направлен фокус, либо None, если такой отсутствует.
# focus_displayof - возвращает виджет, на который направлен фокус на том дисплее, на котором размещён виджет, либо None, если такой отсутствует.
# focus_lastfor - возвращает виджет, на который будет направлен фокус, когда окно с этим виджетом получит фокус.
# tk_focusNext - возвращает виджет, который получит фокус следующим (обычно смена фокуса происходит при нажатии клавиши Tab).
# Порядок следования определяется последовательностью упаковки виджетов.
# tk_focusPrev - то же, что и focusNext, но в обратном порядке.
# tk_focusFollowsMouse - устанавливает, что виджет будет получать фокус при наведении на него мышью.
# Вернуть нормальное поведение достаточно сложно.