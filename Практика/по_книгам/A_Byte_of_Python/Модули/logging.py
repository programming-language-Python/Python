# на пк
'''
logging используется когда необходимо
сохранить некоторые отладочные или
другие важные сообщения где-нибудь,
чтобы иметь возможность позже проверить,
отработала ли программа, как ожидалось.
'''
import os, platform, logging
if platform.platform().startswith('Windows'): # проверяем, какая операционная система используется
    '''
    Определяем диск, содержащий
    домашний каталог, путь к домашнему
    каталогу на нём и имя файла, в 
    котором хотим сохранить информацию.
    Сложив все эти три части, получаем 
    полный путь к файлу. 
    '''
    logging_file = os.path.join(os.getenv('HOMEDRIVE'), \ 
    	os.getenv('HOMEPATH'), \ 
    	'test.log')
    	'''
    	При помощи функции os.path.join()
    	объединяем три части пути к файлу
    	вместе. Мы используем эту функцию
    	вместо простого объединения строк для
    	того, чтобы гарантировать, что полный
    	путь к файлу записан в формате,
    	ожидаемом операционной системой.
    	'''
else: 
    '''
    Для других платформ нам нужно знать
    только путь к домашнему каталогу пользователя,
    и мы получим полный путь к файлу.
    '''
    logging_file = os.path.join(os.getenv('HOME'), 'test.log')
print("Сохраняем лог в", logging_file)
'''
Далее конфигурируем модуль
logging таким образом, чтобы он
записывал все сообщения в определённом
формате в указанный файл.
'''
logging.basicConfig( level=logging.DEBUG,\
format='%(asctime)s : %(levelname)s : %(message)s',\
filename = logging_file, filemode = 'w', ) 
logging.debug("Начало программы")
logging.info("Какие-то действия")
logging.warning("Программа умирает")